{"version":3,"sources":["Controls.js","Good.js","App.js","index.js"],"names":["Clear","props","type","className","onClick","clear","bind","app","Remove","remove","Add","add","Good","good","goodsFromServer","App","state","selectedGoods","event","target","previousSibling","textContent","setState","push","index","findIndex","selectedGood","splice","this","userSelection","length","slice","join","map","selected","includes","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+NAGaA,EAAQ,SAAAC,GAAK,OACxB,4BACEC,KAAK,SACLC,UAAU,QACVC,QAASH,EAAMI,MAAMC,KAAKL,EAAMM,MAHlC,MASWC,EAAS,SAAAP,GAAK,OACzB,4BACEC,KAAK,SACLE,QAASH,EAAMQ,OAAOH,KAAKL,EAAMM,MAFnC,WAQWG,EAAM,SAAAT,GAAK,OACtB,4BACEC,KAAK,SACLE,QAASH,EAAMU,IAAIL,KAAKL,EAAMM,MAFhC,QCpBWK,EAAO,SAAAX,GAAK,OACvB,0BAAME,UAAU,QAAQF,EAAMY,OCC1BC,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAoFaC,E,4MAhFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBN,IAAM,SAACO,GACL,IAAML,EAAOK,EAAMC,OAAOC,gBAAgBC,YAE1C,EAAKC,UAAS,YAAwB,IAArBL,EAAoB,EAApBA,cAGf,OAFAA,EAAcM,KAAKV,GAEZ,CACLI,qB,EAKNR,OAAS,SAACS,GACR,IAAML,EAAOK,EAAMC,OAAOC,gBAAgBC,YAE1C,EAAKC,UAAS,YAAwB,IAArBL,EAAoB,EAApBA,cACTO,EAAQP,EAAcQ,WAAU,SAAAC,GAAY,OAChDA,IAAiBb,KAKnB,OAFAI,EAAcU,OAAOH,EAAO,GAErB,CACLP,qB,EAKNZ,MAAQ,WACN,EAAKiB,SAAS,CAAEL,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBW,KAAKZ,MAAvBC,cACJY,EAAgB,oBAYpB,OAV6B,IAAzBZ,EAAca,OAChBD,EAAa,UAAMZ,EAAc,GAApB,gBACJA,EAAca,OAAS,IAChCD,EAAgBZ,EACbc,MAAM,EAAGd,EAAca,OAAS,GAChCE,KAAK,MACRH,GAAa,eAAYZ,EAAcA,EAAca,OAAS,IAC9DD,GAAiB,iBAIjB,yBAAK1B,UAAU,OACb,4BACG0B,EACyB,IAAzBZ,EAAca,OACX,kBAAC,EAAD,CAAOzB,MAAOuB,KAAKvB,MAAOE,IAAKqB,OAC/B,IAELd,EAAgBmB,KAAI,SAACpB,GACpB,IAAMqB,EAAWjB,EAAckB,SAAStB,GAExC,OACE,yBACEuB,IAAKvB,EACLV,UAAS,oBACP+B,EAAW,WAAa,KAE1B,kBAAC,EAAD,CAAMrB,KAAMA,IACXqB,EACG,kBAAC,EAAD,CAAQzB,OAAQ,EAAKA,OAAQF,IAAK,IAClC,kBAAC,EAAD,CAAKI,IAAK,EAAKA,IAAKJ,IAAK,a,GAvEzB8B,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.871a10e9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Clear = props => (\n  <button\n    type=\"button\"\n    className=\"clear\"\n    onClick={props.clear.bind(props.app)}\n  >\n    X\n  </button>\n);\n\nexport const Remove = props => (\n  <button\n    type=\"button\"\n    onClick={props.remove.bind(props.app)}\n  >\n    Remove\n  </button>\n);\n\nexport const Add = props => (\n  <button\n    type=\"button\"\n    onClick={props.add.bind(props.app)}\n  >\n    Add\n  </button>\n);\n\nconst appType = PropTypes.shape({\n  selectedGoods: PropTypes.arrayOf(PropTypes.string).isRequired,\n});\n\nAdd.propTypes = {\n  add: PropTypes.func.isRequired,\n  app: appType.isRequired,\n};\n\nRemove.propTypes = {\n  remove: PropTypes.func.isRequired,\n  app: appType.isRequired,\n};\n\nClear.propTypes = {\n  clear: PropTypes.func.isRequired,\n  app: appType.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Good = props => (\n  <span className=\"good\">{props.good}</span>\n);\n\nGood.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Clear, Remove, Add } from './Controls';\nimport { Good } from './Good';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  add = (event) => {\n    const good = event.target.previousSibling.textContent;\n\n    this.setState(({ selectedGoods }) => {\n      selectedGoods.push(good);\n\n      return {\n        selectedGoods,\n      };\n    });\n  }\n\n  remove = (event) => {\n    const good = event.target.previousSibling.textContent;\n\n    this.setState(({ selectedGoods }) => {\n      const index = selectedGoods.findIndex(selectedGood => (\n        selectedGood === good\n      ));\n\n      selectedGoods.splice(index, 1);\n\n      return {\n        selectedGoods,\n      };\n    });\n  };\n\n  clear = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    let userSelection = 'No goods selected';\n\n    if (selectedGoods.length === 1) {\n      userSelection = `${selectedGoods[0]} is selected`;\n    } else if (selectedGoods.length > 1) {\n      userSelection = selectedGoods\n        .slice(0, selectedGoods.length - 1)\n        .join(', ');\n      userSelection += ` and ${selectedGoods[selectedGoods.length - 1]}`;\n      userSelection += ' are selected';\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {userSelection}\n          {selectedGoods.length !== 0\n            ? <Clear clear={this.clear} app={this} />\n            : ''}\n        </h1>\n        {goodsFromServer.map((good) => {\n          const selected = selectedGoods.includes(good);\n\n          return (\n            <div\n              key={good}\n              className={`container ${\n                selected ? 'selected' : ''}`}\n            >\n              <Good good={good} />\n              {selected\n                ? <Remove remove={this.remove} app={this} />\n                : <Add add={this.add} app={this} />\n            }\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}